name: Release and Update

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm ci

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: ./src-tauri -> target

      - name: Create private key file
        run: echo "${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}" > src-tauri/private.key
        shell: bash

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Synapse Data Platform ${{ github.ref_name }}'
          releaseBody: |
            Nuova versione di Synapse Data Platform.

            Migliorie e correzioni incluse in questa release.
          releaseDraft: false
          prerelease: false

  update-repo:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4

      - name: Checkout updates repository
        uses: actions/checkout@v4
        with:
          repository: Lordowl/synapse-data-updates
          token: ${{ secrets.UPDATES_REPO_TOKEN }}
          path: updates-repo

      - name: Download release assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Ottieni gli asset della release appena creata
          gh release download ${{ github.ref_name }} --dir ./release-assets

          # Copia il latest.json nella repo degli update
          cp ./release-assets/latest.json ./updates-repo/latest.json

          # Copia anche gli installer
          cp ./release-assets/*.exe ./updates-repo/ 2>/dev/null || true
          cp ./release-assets/*.msi ./updates-repo/ 2>/dev/null || true

      - name: Commit and push to updates repository
        run: |
          cd updates-repo
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Update to version ${{ github.ref_name }}" || exit 0
          git push